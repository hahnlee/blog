{"version":3,"file":"component---src-containers-category-tsx-70160eb7bff96a99a2f6.js","mappings":"yJAGe,SAASA,IACtB,OACE,2BACE,gBAACC,EAAD,aAON,IAAMA,GAAQC,EAAAA,EAAAA,IAAO,KAAM,CACzBC,OAAQ,SACRC,WAAY,MACZC,SAAU,GACVC,aAAc,I,UCbD,SAASC,IACtB,OACE,gBAACC,EAAD,KACE,gBAACC,EAAD,CAAMC,KAAK,QACT,gBAACC,EAAD,CAAUD,KAAK,WAAWE,KAAK,qBAA/B,SAGA,gBAACD,EAAD,CAAUD,KAAK,WAAWE,KAAK,8BAA/B,UAGA,gBAACD,EAAD,CAAUD,KAAK,WAAWE,KAAK,YAA/B,SAQR,IAAMJ,GAAYN,EAAAA,EAAAA,IAAO,MAAO,CAC9BW,OAAQ,SAGJJ,GAAOP,EAAAA,EAAAA,IAAO,MAAO,CACzBY,QAAS,OACTC,MAAO,cACP,2BAA4B,CAC1BC,cAAe,MACfC,WAAY,GACZC,UAAW,MAITP,GAAWT,EAAAA,EAAAA,IAAO,IAAK,CAC3BiB,MAAOC,EAAAA,EAAAA,MACPC,YAAa,GACb,WAAY,CACVF,MAAOC,EAAAA,EAAAA,OAET,YAAa,CACXD,MAAOC,EAAAA,EAAAA,OAET,2BAA4B,CAC1Bf,SAAU,MCzCC,SAASiB,IACtB,OACE,gBAAC,EAAD,KACE,gBAACtB,EAAD,MACA,gBAACO,EAAD,OAKN,IAAMC,GAAYN,EAAAA,EAAAA,IAAO,SAAU,CACjCqB,SAAU,IACVpB,OAAQ,SACRqB,gBAAiB,QACjBC,OAAQ,EACRC,QAAS,Y,iGCPI,SAASC,EAAT,GAIL,IAHRC,EAGQ,EAHRA,MACAC,EAEQ,EAFRA,YACAjB,EACQ,EADRA,KAEA,OACE,gBAACJ,EAAD,CAAWsB,GAAIlB,GACb,gBAACmB,EAAD,KACE,gBAAC9B,EAAD,KAAQ2B,GACR,gBAACI,EAAD,KAAcH,KAMtB,IAAMrB,GAAYN,EAAAA,EAAAA,IAAO+B,EAAAA,GAAM,CAC7Bd,MAAOC,EAAAA,EAAAA,MACPc,eAAgB,OAChBpB,QAAS,SAGLb,GAAQC,EAAAA,EAAAA,IAAO,KAAM,CACzBC,OAAQ,EACRE,SAAU,GACV8B,WAAY,OACZC,UAAW,aAGPJ,GAAc9B,EAAAA,EAAAA,IAAO,IAAK,CAC9BC,OAAQ,EACRE,SAAU,GACVc,MAAOC,EAAAA,EAAAA,MACPgB,UAAW,aAGPL,GAAO7B,EAAAA,EAAAA,IAAO,MAAO,CACzBmC,KAAM,EACNvB,QAAS,OACTE,cAAe,SACfsB,eAAgB,Y,kICSH,SAASC,EAAT,GAAgD,IAApBC,EAAmB,EAA3BC,KAAQD,OAGzC,OAFAE,EAAAA,EAAAA,KAGE,gBAAC,IAAD,KACE,gBAACC,EAAD,KACE,gBAAC,IAAD,MACA,gBAACC,EAAD,KACGJ,EAAOK,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChB,gBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVrC,KAAMmC,EAAKG,OAAOC,KAClBvB,MAAOmB,EAAKK,YAAYxB,MACxBC,YAAakB,EAAKK,YAAYC,gBAS5C,IAAMV,GAAOzC,EAAAA,EAAAA,IAAO,OAAQ,CAC1BoD,UAAW,OACXC,WAAY,wBACZC,cAAe,iCACf,2BAA4B,CAC1B9B,QAAS,OACT8B,cAAe,iDAIbZ,GAAW1C,EAAAA,EAAAA,IAAO,UAAW,CACjCY,QAAS,OACT2C,oBAAqB,MACrBlC,SAAU,IACVpB,OAAQ,YACRuD,WAAY,OACZC,cAAe","sources":["webpack://blog/./src/components/Header.tsx","webpack://blog/./src/components/SideBar.tsx","webpack://blog/./src/components/NavBar.tsx","webpack://blog/./src/components/PostItem.tsx","webpack://blog/./src/containers/Category.tsx"],"sourcesContent":["import React from 'react'\nimport { styled } from '../styles/stitches'\n\nexport default function Header() {\n  return (\n    <div>\n      <Title>\n        形式知\n      </Title>\n    </div>\n  )\n}\n\nconst Title = styled('h1', {\n  margin: '0 auto',\n  whiteSpace: 'pre',\n  fontSize: 36,\n  marginBottom: 8,\n})\n","import React from 'react'\nimport { colors } from '../styles/colors'\nimport { styled } from '../styles/stitches'\n\nexport default function SideBar() {\n  return (\n    <Container>\n      <Menu role=\"menu\">\n        <MenuItem role=\"menuitem\" href=\"https://hanlee.io\">\n          about\n        </MenuItem>\n        <MenuItem role=\"menuitem\" href=\"https://github.com/hahnlee\">\n          github\n        </MenuItem>\n        <MenuItem role=\"menuitem\" href=\"/rss.xml\">\n          rss\n        </MenuItem>\n      </Menu>\n    </Container>\n  )\n}\n\nconst Container = styled('nav', {\n  height: '100%',\n})\n\nconst Menu = styled('div', {\n  display: 'flex',\n  width: 'min-content',\n  '@media(max-width: 600px)': {\n    flexDirection: 'row',\n    paddingTop: 10,\n    marginTop: 10,\n  },\n})\n\nconst MenuItem = styled('a', {\n  color: colors.grey7,\n  marginRight: 15,\n  '&:active': {\n    color: colors.grey7,\n  },\n  '&:visited': {\n    color: colors.grey7,\n  },\n  '@media(max-width: 600px)': {\n    fontSize: 14,\n  },\n})\n","import React from 'react'\nimport Header from './Header'\nimport SideBar from './SideBar'\nimport { styled } from '../styles/stitches'\n\nexport default function NavBar() {\n  return (\n    <Container>\n      <Header />\n      <SideBar />\n    </Container>\n  )\n}\n\nconst Container = styled('header', {\n  maxWidth: 800,\n  margin: '0 auto',\n  backgroundColor: 'white',\n  zIndex: 1,\n  padding: '24px 0',\n})\n","import { Link } from 'gatsby'\nimport Image, { FixedObject } from 'gatsby-image'\nimport React from 'react'\nimport { colors } from '../styles/colors'\nimport { styled, css } from '../styles/stitches'\n\ninterface Props {\n  title: string\n  description: string\n  href: string\n}\n\nexport default function PostItem({\n  title,\n  description,\n  href,\n}: Props) {\n  return (\n    <Container to={href}>\n      <Item>\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n      </Item>\n    </Container>\n  )\n}\n\nconst Container = styled(Link, {\n  color: colors.grey7,\n  textDecoration: 'none',\n  display: 'flex',\n})\n\nconst Title = styled('h1', {\n  margin: 0,\n  fontSize: 24,\n  lineHeight: '36px',\n  wordBreak: 'keep-all',\n})\n\nconst Description = styled('p', {\n  margin: 0,\n  fontSize: 16,\n  color: colors.grey6,\n  wordBreak: 'keep-all',\n})\n\nconst Item = styled('div', {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n})\n","import { graphql } from 'gatsby'\nimport React from 'react'\nimport Page from '../containers/Page'\nimport PostItem from '../components/PostItem'\nimport NavBar from '../components/NavBar'\nimport { globalReset } from '../styles/global'\nimport { styled } from '../styles/stitches'\n\ninterface Post {\n  id: string\n  frontmatter: {\n    title: string\n    summary: string\n  }\n  fields: {\n    slug: string\n  }\n}\n\ninterface Response {\n  allMdx: {\n    edges: Array<{\n      node: Post\n    }>\n  }\n}\n\nexport const pageQuery = graphql`\n  query($category: String!) {\n    allMdx(\n      filter: { frontmatter: { category: {eq: $category } } },\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            summary\n            thumbnail {\n              childImageSharp {\n                fixed(width: 120, height: 120) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\ninterface Props {\n  data: Response\n}\n\nexport default function Category({ data: { allMdx } }: Props) {\n  globalReset()\n\n  return (\n    <Page>\n      <Main>\n        <NavBar />\n        <PostList>\n          {allMdx.edges.map(({ node }) => (\n            <PostItem\n              key={node.id}\n              href={node.fields.slug}\n              title={node.frontmatter.title}\n              description={node.frontmatter.summary}\n            />\n          ))}\n        </PostList>\n      </Main>\n    </Page>\n  )\n}\n\nconst Main = styled('main', {\n  minHeight: '100%',\n  fontFamily: \"'Noto Serif KR', serf\",\n  paddingBottom: 'env(safe-area-inset-bottom, 0)',\n  '@media(max-width: 600px)': {\n    padding: '30px',\n    paddingBottom: 'calc(30px + env(safe-area-inset-bottom, 0))',\n  },\n})\n\nconst PostList = styled('section', {\n  display: 'grid',\n  gridTemplateColumns: '1fr',\n  maxWidth: 800,\n  margin: '20px auto',\n  gridRowGap: '35px',\n  gridColumnGap: '15px',\n})\n"],"names":["Header","Title","styled","margin","whiteSpace","fontSize","marginBottom","SideBar","Container","Menu","role","MenuItem","href","height","display","width","flexDirection","paddingTop","marginTop","color","colors","marginRight","NavBar","maxWidth","backgroundColor","zIndex","padding","PostItem","title","description","to","Item","Description","Link","textDecoration","lineHeight","wordBreak","flex","justifyContent","Category","allMdx","data","globalReset","Main","PostList","edges","map","node","key","id","fields","slug","frontmatter","summary","minHeight","fontFamily","paddingBottom","gridTemplateColumns","gridRowGap","gridColumnGap"],"sourceRoot":""}