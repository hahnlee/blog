{"version":3,"sources":["webpack:///./src/styles/colors.ts","webpack:///./src/components/ArticleListItem/ArticleListItem.styled.ts","webpack:///./src/components/ArticleListItem/ArticleListItem.tsx","webpack:///./src/components/ArticleListItem/index.ts","webpack:///./src/pages/index.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/Page/Page.jsx","webpack:///./src/components/NavBar/NavBar.styled.ts","webpack:///./src/components/NavBar/NavBar.tsx","webpack:///./src/components/NavBar/index.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Colors","Item","styled","Link","withConfig","displayName","componentId","Content","div","Title","h1","Grey7","Description","p","Grey6","Date","img","Grey3","props","contain","ArticleListItem","_ref","title","description","to","date","timeToRead","react_default","a","createElement","ArticleListItem_styled_Date","__webpack_require__","d","__webpack_exports__","query","IndexPage","edges","data","allMarkdownRemark","Page","ogTitle","ogDescription","NavBar","map","_ref2","index","node","components_ArticleListItem","key","fields","slug","frontmatter","summary","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Footer_module_scss__WEBPACK_IMPORTED_MODULE_1__","_Footer_module_scss__WEBPACK_IMPORTED_MODULE_1___default","Footer","className","styles","footer","content","react_helmet__WEBPACK_IMPORTED_MODULE_1__","_Footer__WEBPACK_IMPORTED_MODULE_2__","_Page_module_scss__WEBPACK_IMPORTED_MODULE_3__","_Page_module_scss__WEBPACK_IMPORTED_MODULE_3___default","children","page","href","rel","sizes","type","color","property","nav","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape"],"mappings":"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","file":"component---src-pages-index-jsx-6e5d5e8fab5801b62a3c.js","sourcesContent":["// https://yeun.github.io/open-color/\n\nenum Colors {\n  Grey0 = '#F8F9FA',\n  Grey1 = '#F1F3F5',\n  Grey2 = '#E9ECEF',\n  Grey3 = '#DEE2E6',\n  Grey5 = '#ADB5BD',\n  Grey6 = '#868E96',\n  Grey7 = '#495057',\n  Grey9 = '#212529',\n}\n\nexport default Colors\n","import { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nimport Colors from '../../styles/colors'\n\nexport const Item = styled(Link)`\n  display: flex;\n  padding: 1rem 0;\n`\n\nexport const Content = styled.div`\n  flex: 1 1 0;\n`\n\nexport const Title = styled.h1`\n  color: ${Colors.Grey7};\n  font-size: 1.75rem;\n  line-height: 25px;\n  margin: 0;\n`\n\nexport const Description = styled.p`\n  color: ${Colors.Grey6};\n  font-size: 16px;\n  line-height: 25px;\n  margin: 0;\n  padding: .5rem 0;\n`\n\nexport const Date = styled.p`\n  margin: 0;\n  font-size: 12px;\n  font-weight: bold;\n  color: ${Colors.Grey6};\n  padding: .5rem 0;\n`\n\ninterface ThumbnailProps {\n  contain?: boolean,\n}\n\nexport const Thumbnail = styled.img<ThumbnailProps>`\n  width: 200px;\n  height: 105px;\n  border: 1px solid ${Colors.Grey3};\n  margin-right: 30px;\n  object-fit: ${props => (props.contain ? 'contain' : 'cover')};\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    height: 50vw;\n    margin-right: 0;\n    margin-bottom: 15px;\n  }\n`\n","import React from 'react'\nimport * as Styled from './ArticleListItem.styled'\n\ninterface ArticleListItemProps {\n  title: string\n  description: string\n  to: string\n  date: string\n  timeToRead: string\n}\n\nfunction ArticleListItem({\n  title,\n  description,\n  to,\n  date,\n  timeToRead,\n}: ArticleListItemProps) {\n  return (\n    <Styled.Item to={to}>\n      <Styled.Content>\n        <Styled.Date>\n          {date}\n          •\n          { timeToRead }분\n        </Styled.Date>\n        <Styled.Title>{title}</Styled.Title>\n        <Styled.Description>{description}</Styled.Description>\n      </Styled.Content>\n    </Styled.Item>\n  )\n}\n\nexport default ArticleListItem\n","import ArticleListItem from './ArticleListItem'\n\nexport default ArticleListItem\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Page from '../components/Page'\nimport NavBar from '../components/NavBar'\nimport ArticleListItem from '../components/ArticleListItem'\n\nexport const query = graphql`\n{\n  allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n    edges {\n      node {\n        timeToRead\n        fields {\n          slug\n        }\n        excerpt\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          summary\n        }\n      }\n    }\n  }\n}\n`\n\nfunction IndexPage({ data: { allMarkdownRemark: { edges } } }) {\n  return (\n    <Page\n      title=\"Han Lee\"\n      ogTitle=\"Han Lee\"\n      ogDescription=\"이한의 개발 블로그\"\n    >\n      <NavBar />\n      {edges.map(({ node }, index) => (\n        <ArticleListItem\n          key={index}\n          to={node.fields.slug}\n          date={node.frontmatter.date}\n          title={node.frontmatter.title}\n          timeToRead={node.timeToRead}\n          description={node.frontmatter.summary}\n        />\n      ))}\n    </Page>\n  )\n}\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\n\nimport styles from './Footer.module.scss'\n\nfunction Footer() {\n  return (\n    <footer className={styles.footer}>\n      <div className={styles.content}>\n        © 2018 - 2019 Han Lee. All right Reserved.\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport Footer from '../Footer'\n\nimport styles from './Page.module.scss'\nimport '../../styles/global.scss'\n\nfunction Page({ children, title, ogTitle, ogDescription }) {\n  return (\n    <div className={styles.page}>\n      <Helmet>\n        <title>{title}</title>\n        <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" />\n        <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\" />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\" />\n        <link rel=\"manifest\" href=\"/site.webmanifest\" />\n        <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#000000\" />\n        {ogTitle && <meta property=\"og:title\" content={ogTitle} />}\n        {ogDescription && <meta property=\"og:description\" content={ogDescription} />}\n      </Helmet>\n      <main className={styles.content}>\n        {children}\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Page\n","import styled from 'styled-components'\n\nimport Colors from '../../styles/colors'\n\nexport const NavBar = styled.nav`\n  top: 0;\n  right: 0;\n  left: 0;\n`\n\nexport const Title = styled.h1`\n  font-size: 1.5rem;\n  width: 100%;\n  max-width: 800px;\n  padding: .5rem 0;\n  margin: 0 0 .5rem 0;\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport * as Styled from './NavBar.styled'\n\nconst LINKS = [\n  { title: 'About', url: 'https://hanlee.io' },\n  { title: 'GitHub', url: 'https://github.com/hahnlee' },\n  { title: 'RSS', url: 'https://blog.hanlee.io/rss.xml' },\n]\n\nfunction NavBar() {\n  return (\n    <Styled.NavBar>\n      <Styled.Title>\n        Han Lee\n      </Styled.Title>\n    </Styled.NavBar>\n  )\n}\n\nexport default NavBar\n","import NavBar from './NavBar'\n\nexport default NavBar\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}